/*
Deployment script for Ch7SharedDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Ch7SharedDatabase"
:setvar DefaultFilePrefix "Ch7SharedDatabase"
:setvar DefaultDataPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"
:setvar DefaultLogPath "C:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key 5e6b8a73-8453-46e3-8058-7517a9393d94 is skipped, element [dbo].[Alert].[UserId] (SqlSimpleColumn) will not be renamed to ArtistId';


GO
PRINT N'Creating [dbo].[Alert]...';


GO
CREATE TABLE [dbo].[Alert] (
    [AlertId]              INT           IDENTITY (1, 1) NOT NULL,
    [Headline]             VARCHAR (50)  NOT NULL,
    [Summary]              VARCHAR (500) NOT NULL,
    [ArtistId]             INT           NOT NULL,
    [ActorDisplayName]     VARCHAR (50)  NOT NULL,
    [ActorUrl]             VARCHAR (255) NOT NULL,
    [ActorAvatarUrl]       VARCHAR (255) NOT NULL,
    [AlertUrl]             VARCHAR (255) NOT NULL,
    [AlertAddedDate]       DATETIME      NOT NULL,
    [ClickCount]           INT           NOT NULL,
    [AlertDate]            DATETIME      NOT NULL,
    [Category]             INT           NOT NULL,
    [ItemIdentifier]       VARCHAR (50)  NOT NULL,
    [ItemDetailIdentifier] INT           NOT NULL,
    PRIMARY KEY CLUSTERED ([AlertId] ASC)
);


GO
PRINT N'Creating [dbo].[AlertSubscription]...';


GO
CREATE TABLE [dbo].[AlertSubscription] (
    [AlertSubscriptionId] INT          IDENTITY (1, 1) NOT NULL,
    [ArtistId]            INT          NOT NULL,
    [Tags]                VARCHAR (50) NOT NULL,
    PRIMARY KEY CLUSTERED ([AlertSubscriptionId] ASC)
);


GO
PRINT N'Creating [dbo].[AlertTag]...';


GO
CREATE TABLE [dbo].[AlertTag] (
    [AlertTagId] INT          IDENTITY (1, 1) NOT NULL,
    [AlertId]    INT          NOT NULL,
    [Tag]        VARCHAR (36) NOT NULL,
    PRIMARY KEY CLUSTERED ([AlertTagId] ASC)
);


GO
PRINT N'Creating Default Constraint on [dbo].[Alert]....';


GO
ALTER TABLE [dbo].[Alert]
    ADD DEFAULT 0 FOR [ClickCount];


GO
PRINT N'Creating Default Constraint on [dbo].[Alert]....';


GO
ALTER TABLE [dbo].[Alert]
    ADD DEFAULT getdate() FOR [AlertDate];


GO
PRINT N'Creating Default Constraint on [dbo].[Alert]....';


GO
ALTER TABLE [dbo].[Alert]
    ADD DEFAULT 0 FOR [ItemDetailIdentifier];


GO
PRINT N'Creating FK_AlertSubscription_Artist...';


GO
ALTER TABLE [dbo].[AlertSubscription] WITH NOCHECK
    ADD CONSTRAINT [FK_AlertSubscription_Artist] FOREIGN KEY ([ArtistId]) REFERENCES [dbo].[Artist] ([ArtistId]);


GO
PRINT N'Creating FK_AlertTag_Alert...';


GO
ALTER TABLE [dbo].[AlertTag] WITH NOCHECK
    ADD CONSTRAINT [FK_AlertTag_Alert] FOREIGN KEY ([AlertId]) REFERENCES [dbo].[Alert] ([AlertId]);


GO
-- Refactoring step to update target server with deployed transaction logs
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5e6b8a73-8453-46e3-8058-7517a9393d94')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5e6b8a73-8453-46e3-8058-7517a9393d94')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[AlertSubscription] WITH CHECK CHECK CONSTRAINT [FK_AlertSubscription_Artist];

ALTER TABLE [dbo].[AlertTag] WITH CHECK CHECK CONSTRAINT [FK_AlertTag_Alert];


GO
PRINT N'Update complete.'
GO
